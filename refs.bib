@article{gulwani2017program,
  title={Program synthesis},
  author={Gulwani, Sumit and Polozov, Oleksandr and Singh, Rishabh and others},
  journal={Foundations and Trends{\textregistered} in Programming Languages},
  volume={4},
  number={1-2},
  pages={1--119},
  year={2017},
  publisher={Now Publishers, Inc.}
}

@article{IntelliCode,
  author = {Miltner, Anders and Gulwani, Sumit and Le, Vu and Leung, Alan and Radhakrishna, Arjun and Soares, Gustavo and Tiwari, Ashish and Udupa, Abhishek},
  title = {On the fly synthesis of edit suggestions},
  year = {2019},
  issue_date = {October 2019},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {3},
  number = {OOPSLA},
  url = {https://doi.org/10.1145/3360569},
  doi = {10.1145/3360569},
  abstract = {When working with a document, users often perform context-specific repetitive edits – changes to the document that are similar but specific to the contexts at their locations. Programming by demonstration/examples (PBD/PBE) systems automate these tasks by learning programs to perform the repetitive edits from demonstration or examples. However, PBD/PBE systems are not widely adopted, mainly because they require modal UIs – users must enter a special mode to give the demonstration/examples. This paper presents Blue-Pencil, a modeless system for synthesizing edit suggestions on the fly. Blue-Pencil observes users as they make changes to the document, silently identifies repetitive changes, and automatically suggests transformations that can apply at other locations. Blue-Pencil is parameterized – it allows the ”plug-and-play” of different PBE engines to support different document types and different kinds of transformations. We demonstrate this parameterization by instantiating Blue-Pencil to several domains – C# and SQL code, markdown documents, and spreadsheets – using various existing PBE engines. Our evaluation on 37 code editing sessions shows that Blue-Pencil synthesized edit suggestions with a precision of 0.89 and a recall of 1.0, and took 199 ms to return suggestions on average. Finally, we report on several improvements based on feedback gleaned from a field study with professional programmers to investigate the use of Blue-Pencil during long code editing sessions. Blue-Pencil has been integrated with Visual Studio IntelliCode to power the IntelliCode refactorings feature.},
  journal = {Proc. ACM Program. Lang.},
  month = oct,
  articleno = {143},
  numpages = {29},
  keywords = {Refactoring, Programming by example, Program transformation, Program synthesis}
}

@article{Shen2014DiscoveringQB,
  title={Discovering queries based on example tuples},
  author={Yanyan Shen and Kaushik Chakrabarti and Surajit Chaudhuri and Bolin Ding and Lev Novik},
  journal={Proceedings of the 2014 ACM SIGMOD International Conference on Management of Data},
  year={2014},
  url={https://api.semanticscholar.org/CorpusID:6440703}
}

@article{Solomonoff,
  title={Algorithmic probability: Theory and applications},
  author={Solomonoff, Ray J},
  journal={Information theory and statistical learning},
  pages={1--23},
  year={2009},
  publisher={Springer}
}
